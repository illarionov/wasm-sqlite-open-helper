#!/usr/bin/env bash
set -Euo pipefail

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

STDIN_COPY=$(mktemp /tmp/stdincopy-XXXX)
CHECKSTYLE_OUTPUT=$(mktemp /tmp/stylecheck-XXXX)

cleanup() {
    trap - SIGINT SIGTERM ERR EXIT
    rm -f "$CHECKSTYLE_OUTPUT" "$STDIN_COPY"
}

trap cleanup SIGINT SIGTERM EXIT

zero=$(git hash-object --stdin </dev/null | tr '0-9a-f' '0')
run_checks=""

while read local_ref local_oid remote_ref remote_oid; do
    if test "$local_oid" = "$zero"; then
        # Handle delete
        :
    else
        run_checks=true
    fi
done < <(tee "$STDIN_COPY")

if [ -n "$run_checks" ]; then
    # Style check
    echo "Running style check..."

    cd "$(git rev-parse --show-toplevel)"

    ./gradlew styleCheck >>"$CHECKSTYLE_OUTPUT" 2>&1
    GRADLE_EXIT_CODE=$?

    if [ $GRADLE_EXIT_CODE -ne 0 ]; then
        cat "$CHECKSTYLE_OUTPUT"
        echo "***********************************************"
        echo "              Style check failed               "
        echo " Please fix the above issues before committing "
        echo "***********************************************"
        exit 1
    fi
fi

exit 0
